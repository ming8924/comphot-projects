% function [ shift_im ] = align_ssd( im_ref, im )
% %UNTITLED2 Summary of this function goes here
% %   Detailed explanation goes here
%     im_ref = double(im_ref);
%     im = double(im);
%     s_range = 10;
%     err = 1000000000;
%     [h, w, c] = size(im);
%     im_aug = zeros(h + 2 * s_range, w + 2 * s_range, c);
%     im_aug(s_range + 1 : end - s_range, s_range + 1: end - s_range, c) = im; 
% 
%     mask = zeros(h + 2 * s_range, w + 2 * s_range, c);
%     mask(s_range + 1 : end - s_range, s_range + 1: end - s_range, c) = 1;
%     
%     for i = 1 : 2 * s_range + 1
%         for j = 1 : 2 * s_range + 1
%             im_cur = im_aug(i : i + h - 1, j : j + w - 1, c);
%             mask_cur = mask(i : i + h - 1, j : j + w - 1, c);
%             cur_err = mean(mean((im_cur.*mask_cur - im_ref.*mask_cur).^2));
%             if(cur_err < err)
%                 y = i;
%                 x = j;
%                 err = cur_err;
%             end
%         end
%     end
%     shift_im = im_aug(y : y + h - 1, x : x + w - 1, c);
% end
% 

function [ shift_im ] = align_ncc( im_ref, im )
%UNTITLED2 Summary of this function goes here
%   Detailed explanation goes here
    im_ref = double(im_ref);
    im = double(im);
    range = 10;
    err = 1000000;
    [h, w, c] = size(im);
    im_aug = zeros(h + 2 * range, w + 2 * range, c);
    im_aug(range + 1 : end - range, range + 1: end - range, c) = im; 

    mask = zeros(h + 2 * range, w + 2 * range, c);
    mask(range + 1 : end - range, range + 1: end - range, c) = 1;
    for i = 1 : 2 * range + 1
        for j = 1 : 2 * range + 1
            im_cur = im_aug(i : i + h - 1, j : j + w - 1, c);
            im_mask = mask(i : i + h - 1, j : j + w - 1, c);
            
            im_cur_reshape = im_cur(:);
            im_mask_reshape = im_mask(:);
            ind = (im_mask_reshape == 1);
            
            mask_cur = im_cur(ind);
            mask_ref = im_ref(ind);
            mean_cur = mean(mask_cur);
            mean_ref = mean(mask_ref);
            
            cur_err = sum(sum((mask_ref-mean_ref).*(mask_cur-mean_cur)))/...
                sqrt(sum(sum((mask_cur-mean_cur).^2)))/...
                sqrt(sum(sum((mask_ref-mean_ref).^2)));
            if(cur_n > ncc)
                y = i;
                x = j;
                ncc = cur_ncc;
            end
        end
    end
    shift_im = im_aug(y : y + h - 1, x : x + w - 1, c);
end


